
package interfaces;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 *
 * @author alumno
 */
public class Empresa extends javax.swing.JPanel {

    /**
     * Creates new form Empresa
     */
    public Empresa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt_Añadir = new javax.swing.JButton();
        bt_Eliminar = new javax.swing.JButton();
        bt_Actualizar = new javax.swing.JButton();
        bt_Buscar = new javax.swing.JButton();
        bt_Ordenados = new javax.swing.JButton();
        bt_GastoTotal = new javax.swing.JButton();
        bt_MostrarAntiguos = new javax.swing.JButton();
        bt_Salir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_Resultado = new javax.swing.JTextArea();

        bt_Añadir.setText("Añadir Empleado");
        bt_Añadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_AñadirActionPerformed(evt);
            }
        });

        bt_Eliminar.setText("Eliminar Empleado");
        bt_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_EliminarActionPerformed(evt);
            }
        });

        bt_Actualizar.setText("Actualizar Empleado");
        bt_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ActualizarActionPerformed(evt);
            }
        });

        bt_Buscar.setText("Buscar Empleado");
        bt_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_BuscarActionPerformed(evt);
            }
        });

        bt_Ordenados.setText("Empleados Ordenados");
        bt_Ordenados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_OrdenadosActionPerformed(evt);
            }
        });

        bt_GastoTotal.setText("Calcular Gasto Total");
        bt_GastoTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_GastoTotalActionPerformed(evt);
            }
        });

        bt_MostrarAntiguos.setText("Mostrar Empleados Antiguos");
        bt_MostrarAntiguos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_MostrarAntiguosActionPerformed(evt);
            }
        });

        bt_Salir.setText("Salir");
        bt_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_SalirActionPerformed(evt);
            }
        });

        ta_Resultado.setEditable(false);
        ta_Resultado.setColumns(20);
        ta_Resultado.setRows(5);
        jScrollPane1.setViewportView(ta_Resultado);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt_Añadir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_Eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_Actualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(bt_Buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bt_MostrarAntiguos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_GastoTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_Ordenados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_Salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(164, 164, 164))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Añadir)
                    .addComponent(bt_Ordenados))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Eliminar)
                    .addComponent(bt_GastoTotal))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Actualizar)
                    .addComponent(bt_MostrarAntiguos))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Buscar)
                    .addComponent(bt_Salir))
                .addGap(12, 12, 12))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bt_AñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_AñadirActionPerformed
        String codigo = JOptionPane.showInputDialog("Introduce el código del empleado:");
        String nombre = JOptionPane.showInputDialog("Introduce el nombre del empleado:");
        String apellidos = JOptionPane.showInputDialog("Introduce los apellidos del empleado:");
        LocalDate fechaNacimiento = obtenerFecha("Introduce la fecha de nacimiento del empleado (DD/MM/YYYY):");
        LocalDate fechaIngreso = obtenerFecha("Introduce la fecha de ingreso del empleado (DD/MM/YYYY):");
        String puesto = JOptionPane.showInputDialog("Introduce el puesto del empleado:");
        double salario = Double.parseDouble(JOptionPane.showInputDialog("Introduce el salario del empleado:"));

        EmpleadosEmpresa.añadirEmpleado(codigo, nombre, apellidos, fechaNacimiento, fechaIngreso, puesto, salario);
        ta_Resultado.setText("Empleado añadido correctamente.");
    }//GEN-LAST:event_bt_AñadirActionPerformed

    private void bt_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_EliminarActionPerformed
        String codigo = JOptionPane.showInputDialog("Introduce el código del empleado a eliminar:");
        EmpleadosEmpresa.eliminarEmpleado(codigo);
        ta_Resultado.setText("Empleado eliminado correctamente.");
    }//GEN-LAST:event_bt_EliminarActionPerformed

    private void bt_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ActualizarActionPerformed
        String codigo = JOptionPane.showInputDialog("Introduce el código del empleado a actualizar:");
        String nuevoPuesto = JOptionPane.showInputDialog("Introduce el nuevo puesto del empleado:");
        double nuevoSalario = Double.parseDouble(JOptionPane.showInputDialog("Introduce el nuevo salario del empleado:"));
        
        EmpleadosEmpresa.actualizarEmpleadoDB(codigo, nuevoPuesto, nuevoSalario);
        ta_Resultado.setText("Empleado actualizado correctamente.");
    }//GEN-LAST:event_bt_ActualizarActionPerformed

    private void bt_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_BuscarActionPerformed
        String codigo = JOptionPane.showInputDialog("Introduce el código del empleado:");
        Empleado empleado = EmpleadosEmpresa.buscarEmpleado(codigo);
        
        if (empleado != null) {
            ta_Resultado.setText(empleado.toString());
        } else {
            ta_Resultado.setText("Empleado no encontrado.");
        }
    }//GEN-LAST:event_bt_BuscarActionPerformed

    private void bt_OrdenadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_OrdenadosActionPerformed
        String[] opciones = {"Por antigüedad", "Por salario", "Por apellido"};
        int opcion = JOptionPane.showOptionDialog(null, "Seleccione el criterio de ordenación:", "Ordenar Empleados",
                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opciones, opciones[0]);
        
        switch (opcion) {
            case 0:
                EmpleadosEmpresa.ordenadosPorAntigüedad();
                break;
            case 1:
                EmpleadosEmpresa.ordenadosPorSalario();
                break;
            case 2:
                EmpleadosEmpresa.ordenadosPorApellido();
                break;
            default:
                ta_Resultado.setText("No se seleccionó una opción válida.");
                return;
        }
        
        ta_Resultado.setText("Empleados ordenados correctamente.");
    }//GEN-LAST:event_bt_OrdenadosActionPerformed

    private void bt_GastoTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_GastoTotalActionPerformed
        double gastoTotal = EmpleadosEmpresa.calcularGastoTotal();
        ta_Resultado.setText("El gasto total en salarios de los empleados es: " + gastoTotal);
    }//GEN-LAST:event_bt_GastoTotalActionPerformed

    private void bt_MostrarAntiguosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_MostrarAntiguosActionPerformed
        EmpleadosEmpresa.mostrarEmpleadosAntiguos();
        ta_Resultado.setText("Empleados antiguos mostrados correctamente.");
    }//GEN-LAST:event_bt_MostrarAntiguosActionPerformed

    private void bt_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bt_SalirActionPerformed
    
    private LocalDate obtenerFecha(String mensaje) {
        LocalDate fecha = null;
        do {
            String strFecha = JOptionPane.showInputDialog(mensaje);
            try {
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                fecha = LocalDate.parse(strFecha, formatter);
                break;
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(null, "ERROR. Introduce el formato correcto DD/MM/YYYY.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } while (fecha == null);
        return fecha;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Actualizar;
    private javax.swing.JButton bt_Añadir;
    private javax.swing.JButton bt_Buscar;
    private javax.swing.JButton bt_Eliminar;
    private javax.swing.JButton bt_GastoTotal;
    private javax.swing.JButton bt_MostrarAntiguos;
    private javax.swing.JButton bt_Ordenados;
    private javax.swing.JButton bt_Salir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ta_Resultado;
    // End of variables declaration//GEN-END:variables
}
